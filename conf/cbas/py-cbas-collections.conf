cbas.cbas_collection_functional_test.CBASDataverseAndScopes:
    
    # Creating Dataverse
    test_create_dataverse,cardinality=0,validate_error=True,error=A dataverse with this name {0} already exists,error_code=24039
    test_create_dataverse,cardinality=4,validate_error=True,error=A dataverse with this name {0} already exists,error_code=24039
    test_create_dataverse,cardinality=1
    test_create_dataverse,cardinality=2
    test_create_dataverse,cardinality=3,validate_error=True,error=Invalid dataverse name {0}. Only 1 or 2 name components are allowed,error_code=24116
    # MB 41466
    test_create_dataverse,cardinality=2,name_length=256,fixed_length=True
    
    # Dropping Dataverse
    test_drop_dataverse,cardinality=0,validate_error=True,error=Compilation error: Default dataverse can't be dropped,error_code=24001
    # MB-41278
    test_drop_dataverse,cardinality=4,validate_error=True,error=Internal error
    test_drop_dataverse,cardinality=1
    test_drop_dataverse,cardinality=2
    # MB 41466
    test_drop_dataverse,cardinality=2,name_length=256,fixed_length=True
    
    # Creating analytics scope
    test_create_analytics_scope,cardinality=0,validate_error=True,error=A dataverse with this name {0} already exists,error_code=24039
    test_create_analytics_scope,cardinality=4,validate_error=True,error=A dataverse with this name {0} already exists,error_code=24039
    test_create_analytics_scope,cardinality=1
    test_create_analytics_scope,cardinality=2
    test_create_analytics_scope,cardinality=3,validate_error=True,error=Invalid dataverse name {0}. Only 1 or 2 name components are allowed,error_code=24116
    # MB 41466
    test_create_analytics_scope,cardinality=2,name_length=256,fixed_length=True
    
    # Dropping analytics scope
    test_drop_analytics_scope,cardinality=0,validate_error=True,error=Compilation error: Default dataverse can't be dropped,error_code=24001
    # MB-41278
    test_drop_analytics_scope,cardinality=4,validate_error=True,error=Internal error
    test_drop_analytics_scope,cardinality=1
    test_drop_analytics_scope,cardinality=2
    # MB 41466
    test_drop_analytics_scope,cardinality=2,name_length=256,fixed_length=True
    
    # USE DDL statement with 1 part dataverse name
    test_use_statement,cardinality=1
    
    # USE DDL statement with 2 part dataverse name
    test_use_statement,cardinality=2
    
    # MB-41971 USE DDL statement with 3 part dataverse name
    test_use_statement,cardinality=3,error=Cannot find dataverse with name {0}
    
    # USE DDL statement with 1st part of 2 part dataverse name
    test_use_statement,cardinality=2,error=Cannot find dataverse with name {0},split_name=True

cbas.cbas_collection_functional_test.CBASDatasetsAndCollections:
    # Creating Dataset
    test_create_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=1,bucket_cardinality=1
    test_create_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=1,bucket_cardinality=2,validate_error=True,error=Syntax error
    test_create_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=1,bucket_cardinality=3
    test_create_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=2,bucket_cardinality=1
    test_create_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=2,bucket_cardinality=2,validate_error=True,error=Syntax error
    test_create_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=2,bucket_cardinality=3
    test_create_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=3,bucket_cardinality=1
    test_create_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=3,bucket_cardinality=2,validate_error=True,error=Syntax error
    test_create_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=3,bucket_cardinality=3
    test_create_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=1,bucket_cardinality=1,no_dataset_name=True
    
    # MB-41465
    test_create_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=1,bucket_cardinality=3,no_dataset_name=True,validate_error=True,error=Syntax error
    
    # MB-41614 unstable
    #test_create_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=1,bucket_cardinality=1,override_spec_params=remove_default_collection,remove_default_collection=True,validate_error=True,error=?
    
    # MB-41424
    test_create_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=3,bucket_cardinality=3,name_length=256,validate_error=True,error=Internal error
    
    test_create_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=3,bucket_cardinality=3,invalid_kv_collection=True,validate_error=True,error=Collection ({0}) does not exist
    test_create_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=3,bucket_cardinality=3,invalid_kv_scope=True,validate_error=True,error=Scope ({0}) does not exist
    test_create_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=3,bucket_cardinality=3,invalid_dataverse=True,validate_error=True,error=Cannot find dataverse with name {0}
    #unstable
    #test_create_multiple_datasets,bucket_spec=multi_bucket.analytics_multi_bucket,no_of_datasets=100
    
    # Dropping Dataset
    test_drop_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=1,bucket_cardinality=3
    test_drop_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=2,bucket_cardinality=3
    test_drop_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=3,bucket_cardinality=3
    test_drop_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=2,bucket_cardinality=3,invalid_dataset=True,validate_error=True,error=Cannot find dataset with name {0}
    
    # Create Analytics creation
    test_create_analytics_collection,bucket_spec=single_bucket.analytics_single_bucket,cardinality=1,bucket_cardinality=1,dataset_creation_method=cbas_collection
    test_create_analytics_collection,bucket_spec=single_bucket.analytics_single_bucket,cardinality=1,bucket_cardinality=2,validate_error=True,error=Syntax error,dataset_creation_method=cbas_collection
    test_create_analytics_collection,bucket_spec=single_bucket.analytics_single_bucket,cardinality=1,bucket_cardinality=3,dataset_creation_method=cbas_collection
    test_create_analytics_collection,bucket_spec=single_bucket.analytics_single_bucket,cardinality=2,bucket_cardinality=1,dataset_creation_method=cbas_collection
    test_create_analytics_collection,bucket_spec=single_bucket.analytics_single_bucket,cardinality=2,bucket_cardinality=2,validate_error=True,error=Syntax error,dataset_creation_method=cbas_collection
    test_create_analytics_collection,bucket_spec=single_bucket.analytics_single_bucket,cardinality=2,bucket_cardinality=3,dataset_creation_method=cbas_collection
    test_create_analytics_collection,bucket_spec=single_bucket.analytics_single_bucket,cardinality=3,bucket_cardinality=1,dataset_creation_method=cbas_collection
    test_create_analytics_collection,bucket_spec=single_bucket.analytics_single_bucket,cardinality=3,bucket_cardinality=2,validate_error=True,error=Syntax error,dataset_creation_method=cbas_collection
    test_create_analytics_collection,bucket_spec=single_bucket.analytics_single_bucket,cardinality=3,bucket_cardinality=3,dataset_creation_method=cbas_collection
    test_create_analytics_collection,bucket_spec=single_bucket.analytics_single_bucket,cardinality=1,bucket_cardinality=1,no_dataset_name=True
    
    # MB-41465
    test_create_analytics_collection,bucket_spec=single_bucket.analytics_single_bucket,cardinality=1,bucket_cardinality=3,no_dataset_name=True,validate_error=True,error=Syntax error
    
    # MB-41614 unstable
    #test_create_analytics_collection,bucket_spec=single_bucket.analytics_single_bucket,cardinality=1,bucket_cardinality=1,override_spec_params=remove_default_collection,remove_default_collection=True,dataset_creation_method=cbas_collection
    
    # MB-41424
    test_create_analytics_collection,bucket_spec=single_bucket.analytics_single_bucket,cardinality=3,bucket_cardinality=3,name_length=256,validate_error=True,error=Internal error,dataset_creation_method=cbas_collection
    
    test_create_analytics_collection,bucket_spec=single_bucket.analytics_single_bucket,cardinality=3,bucket_cardinality=3,invalid_kv_collection=True,validate_error=True,error=Collection ({0}) does not exist,dataset_creation_method=cbas_collection
    test_create_analytics_collection,bucket_spec=single_bucket.analytics_single_bucket,cardinality=3,bucket_cardinality=3,invalid_kv_scope=True,validate_error=True,error=Scope ({0}) does not exist,dataset_creation_method=cbas_collection
    test_create_analytics_collection,bucket_spec=single_bucket.analytics_single_bucket,cardinality=3,bucket_cardinality=3,invalid_dataverse=True,validate_error=True,error=Cannot find dataverse with name {0},dataset_creation_method=cbas_collection
    # unstable
    #test_create_multiple_datasets,bucket_spec=multi_bucket.analytics_multi_bucket,no_of_datasets=100,dataset_creation_method=cbas_collection
   	
   	# Dropping analytics collection
   	test_drop_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=1,bucket_cardinality=3,dataset_creation_method=cbas_collection,dataset_drop_method=cbas_collection
    test_drop_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=2,bucket_cardinality=3,dataset_creation_method=cbas_collection,dataset_drop_method=cbas_collection
    test_drop_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=3,bucket_cardinality=3,dataset_creation_method=cbas_collection,dataset_drop_method=cbas_collection
    test_drop_dataset,bucket_spec=single_bucket.analytics_single_bucket,cardinality=2,bucket_cardinality=3,invalid_dataset=True,validate_error=True,error=Cannot find dataset with name {0},dataset_creation_method=cbas_collection,dataset_drop_method=cbas_collection
    
    # Enabling analytics from KV using 3-part name on non default collection
    test_enabling_analytics_collection_from_KV,bucket_spec=single_bucket.analytics_single_bucket,bucket_cardinality=3,consider_default_KV_collection=False
    
    # Enabling analytics from KV using 3-part name on non default collection when dataverse is already present.
    test_enabling_analytics_collection_from_KV,bucket_spec=single_bucket.analytics_single_bucket,bucket_cardinality=3,consider_default_KV_collection=False,create_dataverse=True
    
    # Enabling analytics from KV using 3-part name on default collection and verifying whether synonym with bucket name is created in default dataverse 
    test_enabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=3,verify_synonym=True
    
    # Enabling analytics from KV using 3-part name with compress dataset flag set to True.
    test_enabling_analytics_collection_from_KV,bucket_spec=single_bucket.analytics_single_bucket,bucket_cardinality=3,consider_default_KV_collection=False,compress_dataset=True
    
    # Enabling analytics from KV using 3-part name on a non-existent collection
    test_enabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=3,invalid_kv_collection=True,validate_error=True,error=Collection ({0}) does not exist
    
    # Enabling analytics from KV using 3-part name on a non-existent KV scope
    test_enabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=3,invalid_kv_scope=True,validate_error=True,error=Syntax error
    
    # Enabling analytics from KV using 3-part name when a synonym with collection name is already present in the dataverse bucket_name.scope_name
    # MB-41675
    test_enabling_analytics_collection_from_KV,bucket_spec=single_bucket.analytics_single_bucket,bucket_cardinality=3,consider_default_KV_collection=False,create_dataverse=True,synonym_name=Collection
    
    # Enabling analytics from KV using 3-part name on default collection when synonym with Bucket name already present in Default dataverse
    test_enabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=3,create_dataverse=True,synonym_name=Bucket,validate_error=True,error=Operation failed because there already exists a synonym {0} in dataverse Default
    
    # Enabling analytics from KV using 3-part name on a collection when dataset with collection name already present in dataverse bucket_name.scope_name
    test_enabling_analytics_collection_from_KV,bucket_spec=single_bucket.analytics_single_bucket,bucket_cardinality=3,consider_default_KV_collection=False,precreate_dataset=Named,validate_error=True,error=A dataset with name {0} already exists in dataverse {1}
    
    # Enabling analytics from KV using 3-part name on default collection when dataset with bucket name already present in default dataverse
    test_enabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=3,precreate_dataset=Default
    
    # Enabling analytics from KV using 1-part name and verifying whether synonym with bucket name is created in default dataverse 
    test_enabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=1,verify_synonym=True
    
    # Enabling analytics from KV using 1-part name when dataverse bucket_name._default is already present 
    test_enabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=1,dataset_cardinality=3,verify_synonym=True,
    
    # Enabling analytics from KV using 1-part name with compress dataset flag set to True.
    test_enabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=1,compress_dataset=True
    
    # MB-41513 Enabling analytics from KV using 1-part name when default collection is not present in KV bucket
    test_enabling_analytics_collection_from_KV,bucket_spec=single_bucket.analytics_single_bucket,bucket_cardinality=1,override_spec_params=remove_default_collection,remove_default_collection=True,validate_error=True,error=Internal error
    
    # Enabling analytics from KV using 1-part name on non-existent KV bucket 
    test_enabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=1,invalid_kv_bucket=True,validate_error=True,error=Bucket ({0}) does not exist
    
    # Enabling analytics from KV using 1-part name when a synonym with collection name is already present in the dataverse bucket_name.scope_name
    # MB-41675
    test_enabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=1,,dataset_cardinality=3,create_dataverse=True,synonym_name=Collection
    
    # Enabling analytics from KV using 1-part name when synonym with Bucket name already present in Default dataverse
    test_enabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=1,synonym_name=Bucket,validate_error=True,error=Operation failed because there already exists a synonym {0} in dataverse Default
    
    # Enabling analytics from KV using 1-part name when dataset with collection name already present in dataverse bucket_name.scope_name
    test_enabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=1,dataset_cardinality=3,precreate_dataset=Named,validate_error=True,error=A dataset with name {0} already exists in dataverse {1}
    
    # Enabling analytics from KV using 1-part name when dataset with bucket name already present in default dataverse
    test_enabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=1,precreate_dataset=Default
    
    # Disabling analytics from KV using 3-part name for default collection in bucket.
    test_disabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=3,dataverse_deleted=True,synonym_deleted=True
    
    # Disabling analytics from KV using 3-part name for named collection in bucket.
    test_disabling_analytics_collection_from_KV,bucket_spec=single_bucket.analytics_single_bucket,bucket_cardinality=3,consider_default_KV_collection=False,dataverse_deleted=True
    
    # Disabling analytics from KV using 3-part name when other dataset in present in the dataverse bucket_name.scope_name.
    test_disabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=3,create_dataset=True
    
    # Disabling analytics from KV using 3-part name when other synonyms on the dataset is present.
    test_disabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=3,create_synonym=True
    
    # MB-41678 Disabling analytics from KV using 3-part name for KV bucket on which it was not enabled
    test_disabling_analytics_collection_from_KV,bucket_spec=single_bucket.analytics_single_bucket,bucket_cardinality=3,invalid_kv_collection=True,validate_error=True,error=Internal error
    
    # MB-41834 Disabling analytics from KV using 3-part name when dataset with name bucket.scope.collection already present.
    test_disabling_analytics_collection_from_KV,bucket_spec=single_bucket.analytics_single_bucket,bucket_cardinality=3,consider_default_KV_collection=False,dataset_creation_method=cbas_dataset
    
    # MB-41834 Disabling analytics from KV using 1-part name when dataset with name bucket.scope.collection already present.
    test_disabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=1,dataset_creation_method=cbas_dataset
    
    # Disabling analytics from KV using 1-part name for default collection in bucket.
    test_disabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=1,dataverse_deleted=True,synonym_deleted=True
    
    # Disabling analytics from KV using 1-part name when other dataset in present in the dataverse bucket_name.scope_name.
    test_disabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=1,create_dataset=True
    
    # Disabling analytics from KV using 1-part name when other synonyms on the dataset is present.
    test_disabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=1,create_synonym=True
    
    # MB-41678 Disabling analytics from KV using 1-part name for KV bucket on which it was not enabled
    test_disabling_analytics_collection_from_KV,bucket_spec=single_bucket.default,bucket_cardinality=1,invalid_kv_collection=True,validate_error=True,error=Internal error
    
    # Synonym name same as dataset name in same dataverse.
    test_create_analytics_synonym,bucket_spec=single_bucket.default,synonym_dataverse=dataset,new_synonym_name=False
    
    # Synonym name same as dataset name in different dataverse.
    test_create_analytics_synonym,bucket_spec=single_bucket.default,synonym_dataverse=new,new_synonym_name=False
    
    # Multiple Synonym on same dataset.
    test_create_analytics_synonym,bucket_spec=single_bucket.default,no_of_synonym=10
    
    # Create synonym on synonym in same dataverse.
    test_create_analytics_synonym,bucket_spec=single_bucket.default,synonym_on_synonym=True
    
    # Create synonym on synonym in different dataverse.
    test_create_analytics_synonym,bucket_spec=single_bucket.default,synonym_on_synonym=True,different_syn_on_syn_dv=True
    
    # Delete dataset on which synonym is created
    test_create_analytics_synonym,bucket_spec=single_bucket.default,action_on_dataset=drop,revalidate=True,validate_query_error=True,query_error=Cannot find dataset {0}
    
    # Delete and recreate dataset on which synonym is created
    test_create_analytics_synonym,bucket_spec=single_bucket.default,action_on_dataset=recreate,revalidate=True
    
    # Create synonym on synonym in same dataverse and Delete dataset on which synonym is created
    test_create_analytics_synonym,bucket_spec=single_bucket.default,synonym_on_synonym=True,action_on_dataset=drop,revalidate=True,validate_query_error=True,query_error=Cannot find dataset {0}
    
    # Create synonym on synonym in different dataverse and Delete dataset on which synonym is created
    test_create_analytics_synonym,bucket_spec=single_bucket.default,synonym_on_synonym=True,different_syn_on_syn_dv=True,action_on_dataset=drop,revalidate=True,validate_query_error=True,query_error=Cannot find dataset {0}
    
    # Create synonym on synonym in same dataverse and Delete and recreate dataset on which synonym is created
    test_create_analytics_synonym,bucket_spec=single_bucket.default,synonym_on_synonym=True,action_on_dataset=recreate,revalidate=True
    
    # Create synonym on synonym in different dataverse and Delete and recreate dataset on which synonym is created
    test_create_analytics_synonym,bucket_spec=single_bucket.default,synonym_on_synonym=True,different_syn_on_syn_dv=True,action_on_dataset=recreate,revalidate=True
    
    # Create synonym on synonym in same dataverse and Delete synonym on which new synonym is created
    test_create_analytics_synonym,bucket_spec=single_bucket.default,synonym_on_synonym=True,action_on_synonym=drop,revalidate=True,validate_query_error=True,query_error=Cannot find dataset {0}
    
    # Create synonym on synonym in different dataverse and Delete synonym on which new synonym is created
    test_create_analytics_synonym,bucket_spec=single_bucket.default,synonym_on_synonym=True,different_syn_on_syn_dv=True,action_on_synonym=drop,revalidate=True,validate_query_error=True,query_error=Cannot find dataset {0}
    
    # Create synonym on synonym in same dataverse and Delete and recreate synonym on which new synonym is created
    test_create_analytics_synonym,bucket_spec=single_bucket.default,synonym_on_synonym=True,action_on_synonym=recreate,revalidate=True
    
    # Create synonym on synonym in different dataverse and Delete and recreate synonym on which new synonym is created
    test_create_analytics_synonym,bucket_spec=single_bucket.default,synonym_on_synonym=True,different_syn_on_syn_dv=True,action_on_synonym=recreate,revalidate=True
    
    # Dangling synonym.
    test_create_analytics_synonym,bucket_spec=single_bucket.default,synonym_dataverse=dataset,new_synonym_name=True,dangling_synonym=True
    
    # MB-41859 Create synonym in non-existent dataverse
    test_create_analytics_synonym,bucket_spec=single_bucket.default,synonym_dataverse=dataset,new_synonym_name=True,invalid_dataverse=True,validate_error=True,error=?
    
    # Create multiple synonym with same name in same dataverse.
    test_create_analytics_synonym,bucket_spec=single_bucket.default,synonym_dataverse=dataset,new_synonym_name=False,synonym_on_synonym=True,validate_error1=True,error=A synonym with this name {0} already exists
    
    # Creating multiple synonym with if_not_exists flag
    test_create_analytics_synonym,bucket_spec=single_bucket.default,synonym_dataverse=dataset,new_synonym_name=True,if_not_exists=True,no_of_synonym=3
    
    # Create a dataset and a synonym (on another dataset) with the same name.
    test_dataset_and_synonym_name_resolution_precedence,bucket_spec=single_bucket.analytics_single_bucket,bucket_cardinality=3,cardinality=3
    
    # Create a dataset and a dangling synonym with the same name.
    test_dataset_and_synonym_name_resolution_precedence,bucket_spec=single_bucket.analytics_single_bucket,bucket_cardinality=3,cardinality=3,dangling_synonym=True
    
    # Check creating synonym in same dataverse, if a dataset and a synonym (on another dataset) with the same name are present
    test_dataset_and_synonym_name_resolution_precedence,bucket_spec=single_bucket.analytics_single_bucket,bucket_cardinality=3,cardinality=3,synonym_on_synonym=True
    
    # Check creating synonym in different dataverse, if a dataset and a synonym (on another dataset) with the same name are present
    test_dataset_and_synonym_name_resolution_precedence,bucket_spec=single_bucket.analytics_single_bucket,bucket_cardinality=3,cardinality=3,synonym_on_synonym=True,different_dataverse=True
    
    # Check dropping synonym does not effect dataset it was created on.
    test_drop_analytics_synonym,bucket_spec=single_bucket.default
    
    # Check dropping non-existent synonym.
    test_drop_analytics_synonym,bucket_spec=single_bucket.default,invalid_synonym=True,validate_error=True,error=Internal error
    
    # Check flushing of KV bucket, empties all the datasets based on collections in the flushed bucket.
    test_datasets_created_on_KV_collections_after_flushing_KV_bucket,bucket_spec=single_bucket.analytics_single_bucket,override_spec_params=enable_flush,enable_flush=True
    
    # Check flushing of a KV bucket does not affect datasets created on another bucket.
    test_datasets_created_on_KV_collections_after_flushing_KV_bucket,bucket_spec=multi_bucket.analytics_multi_bucket,override_spec_params=enable_flush,enable_flush=True,create_ds_on_different_bucket=True
    
    # Check adding new data after flushing the KV bucket.
    test_dataset_for_data_addition_post_KV_flushing,bucket_spec=single_bucket.analytics_single_bucket,override_spec_params=enable_flush,enable_flush=True
    
    # Check flushing the same KV bucket multiple times, with adding data between subsequent flushes.
    test_dataset_for_data_addition_post_KV_flushing,bucket_spec=single_bucket.analytics_single_bucket,override_spec_params=enable_flush,enable_flush=True,no_of_flushes=10
    
    # Check flushing the same KV bucket multiple times, without adding data between subsequent flushes.
    test_dataset_for_data_addition_post_KV_flushing,bucket_spec=single_bucket.analytics_single_bucket,override_spec_params=enable_flush,enable_flush=True,no_of_flushes=10,reload_data=False
    
    # Check adding new data while flushing the KV bucket.
    test_dataset_for_adding_new_docs_while_flushing,bucket_spec=single_bucket.default,override_spec_params=enable_flush,enable_flush=True
    
    # Check KV flushing while data mutation.
    test_dataset_when_KV_flushing_during_data_mutation,bucket_spec=single_bucket.default,override_spec_params=enable_flush,enable_flush=True
    
    
    
    
    
    
    
    
    
    
    
    